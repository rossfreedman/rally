-- DbSchema Migration: 20250708_181800_add_groups_tables_and_functionality
-- Generated: 2025-07-08T18:18:00.482711
-- Description: Add groups and group_members tables for group chat functionality
-- 
-- This migration was generated by DbSchema Migration Manager
-- Review carefully before applying to staging/production

BEGIN;

-- Migration starts here

-- Create groups table
CREATE TABLE groups (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    creator_user_id INTEGER NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create group_members table
CREATE TABLE group_members (
    id SERIAL PRIMARY KEY,
    group_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    added_by_user_id INTEGER NOT NULL
);

-- Add foreign key constraints
ALTER TABLE groups 
ADD CONSTRAINT fk_groups_creator_user 
FOREIGN KEY (creator_user_id) REFERENCES users(id);

ALTER TABLE group_members 
ADD CONSTRAINT fk_group_members_group 
FOREIGN KEY (group_id) REFERENCES groups(id) ON DELETE CASCADE;

ALTER TABLE group_members 
ADD CONSTRAINT fk_group_members_user 
FOREIGN KEY (user_id) REFERENCES users(id);

ALTER TABLE group_members 
ADD CONSTRAINT fk_group_members_added_by_user 
FOREIGN KEY (added_by_user_id) REFERENCES users(id);

-- Add indexes for performance
CREATE INDEX idx_groups_creator_user_id ON groups(creator_user_id);
CREATE INDEX idx_group_members_group_id ON group_members(group_id);
CREATE INDEX idx_group_members_user_id ON group_members(user_id);

-- Add unique constraint to prevent duplicate group memberships
ALTER TABLE group_members 
ADD CONSTRAINT uk_group_members_group_user 
UNIQUE (group_id, user_id);

-- Migration ends here

COMMIT;

-- Rollback script (uncomment if needed):
-- BEGIN;
-- DROP TABLE IF EXISTS group_members CASCADE;
-- DROP TABLE IF EXISTS groups CASCADE;
-- COMMIT;
