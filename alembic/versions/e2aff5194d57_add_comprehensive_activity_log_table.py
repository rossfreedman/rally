"""add_comprehensive_activity_log_table

Revision ID: e2aff5194d57
Revises: add_club_address_column
Create Date: 2025-06-20 15:57:03.171588

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e2aff5194d57'
down_revision: Union[str, None] = 'add_club_address_column'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity_log',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action_type', sa.String(length=255), nullable=False),
    sa.Column('action_description', sa.Text(), nullable=False),
    sa.Column('related_id', sa.String(length=255), nullable=True),
    sa.Column('related_type', sa.String(length=100), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('extra_data', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('match_scores', 'home_team_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Foreign key reference to teams table for home team',
               existing_nullable=True)
    op.alter_column('match_scores', 'away_team_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Foreign key reference to teams table for away team',
               existing_nullable=True)
    op.drop_index('idx_match_scores_away_team_id', table_name='match_scores')
    op.drop_index('idx_match_scores_home_team_id', table_name='match_scores')
    op.alter_column('player_availability', 'player_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('player_availability', 'notes',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Optional note/comment from user about their availability',
               existing_nullable=True)
    op.drop_index('idx_player_availability_date_series', table_name='player_availability')
    op.drop_index('idx_player_availability_notes', table_name='player_availability', postgresql_using='gin', postgresql_where="((notes IS NOT NULL) AND (notes <> ''::text))")
    op.drop_index('idx_player_availability_player_id', table_name='player_availability')
    op.drop_index('idx_unique_player_availability', table_name='player_availability')
    op.alter_column('player_season_tracking', 'player_id',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='References tenniscores_player_id from players table',
               existing_nullable=False)
    op.alter_column('player_season_tracking', 'season_year',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Tennis season year (Aug-July seasons)',
               existing_nullable=False)
    op.alter_column('player_season_tracking', 'forced_byes',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Number of forced byes for this player this season',
               existing_nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('player_season_tracking', 'not_available',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Number of times player was not available this season',
               existing_nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('player_season_tracking', 'injury',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Number of injury-related absences this season',
               existing_nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('player_season_tracking', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('player_season_tracking', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index('idx_player_season_tracking_league_season', table_name='player_season_tracking')
    op.drop_index('idx_player_season_tracking_player_id', table_name='player_season_tracking')
    op.drop_constraint('player_season_tracking_player_id_league_id_season_year_key', 'player_season_tracking', type_='unique')
    op.create_unique_constraint('unique_player_season_tracking', 'player_season_tracking', ['player_id', 'league_id', 'season_year'])
    op.drop_table_comment(
        'player_season_tracking',
        existing_comment='Tracks season-long statistics for players including forced byes, unavailability, and injury counts',
        schema=None
    )
    op.alter_column('players', 'team_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Foreign key reference to teams table',
               existing_nullable=True)
    op.drop_index('idx_players_team_id', table_name='players')
    op.alter_column('polls', 'team_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Foreign key reference to teams table (INTEGER)',
               existing_nullable=True)
    op.drop_index('idx_polls_team_id', table_name='polls')
    op.alter_column('schedule', 'home_team_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Foreign key reference to teams table for home team',
               existing_nullable=True)
    op.alter_column('schedule', 'away_team_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Foreign key reference to teams table for away team',
               existing_nullable=True)
    op.drop_index('idx_schedule_away_team_id', table_name='schedule')
    op.drop_index('idx_schedule_home_team_id', table_name='schedule')
    op.alter_column('series_stats', 'team_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Foreign key reference to teams table',
               existing_nullable=True)
    op.drop_index('idx_series_stats_team_id', table_name='series_stats')
    op.alter_column('teams', 'team_name',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='Display name like "Tennaqua - Chicago 9"',
               existing_nullable=False)
    op.alter_column('teams', 'team_alias',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='Optional display alias for team (e.g., "Series 22" instead of "Chicago - 22")',
               existing_nullable=True)
    op.alter_column('teams', 'external_team_id',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='External system team ID for ETL mapping',
               existing_nullable=True)
    op.drop_index('idx_teams_active', table_name='teams', postgresql_where='(is_active = true)')
    op.drop_index('idx_teams_club_id', table_name='teams')
    op.drop_index('idx_teams_league_id', table_name='teams')
    op.drop_index('idx_teams_series_id', table_name='teams')
    op.drop_index('idx_teams_team_alias', table_name='teams', postgresql_where='(team_alias IS NOT NULL)')
    op.drop_constraint('teams_club_id_series_id_league_id_key', 'teams', type_='unique')
    op.create_unique_constraint('unique_team_club_series_league', 'teams', ['club_id', 'series_id', 'league_id'])
    op.drop_table_comment(
        'teams',
        existing_comment='Team entities representing club participation in a series within a league',
        schema=None
    )
    op.alter_column('user_instructions', 'team_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Foreign key reference to teams table',
               existing_nullable=True)
    op.drop_index('idx_user_instructions_team_id', table_name='user_instructions')
    op.drop_index('idx_users_tenniscores_player_id', table_name='users')
    op.drop_column('users', 'tenniscores_player_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('tenniscores_player_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.create_index('idx_users_tenniscores_player_id', 'users', ['tenniscores_player_id'], unique=False)
    op.create_index('idx_user_instructions_team_id', 'user_instructions', ['team_id'], unique=False)
    op.alter_column('user_instructions', 'team_id',
               existing_type=sa.INTEGER(),
               comment='Foreign key reference to teams table',
               existing_nullable=True)
    op.create_table_comment(
        'teams',
        'Team entities representing club participation in a series within a league',
        existing_comment=None,
        schema=None
    )
    op.drop_constraint('unique_team_club_series_league', 'teams', type_='unique')
    op.create_unique_constraint('teams_club_id_series_id_league_id_key', 'teams', ['club_id', 'series_id', 'league_id'], postgresql_nulls_not_distinct=False)
    op.create_index('idx_teams_team_alias', 'teams', ['team_alias'], unique=False, postgresql_where='(team_alias IS NOT NULL)')
    op.create_index('idx_teams_series_id', 'teams', ['series_id'], unique=False)
    op.create_index('idx_teams_league_id', 'teams', ['league_id'], unique=False)
    op.create_index('idx_teams_club_id', 'teams', ['club_id'], unique=False)
    op.create_index('idx_teams_active', 'teams', ['is_active'], unique=False, postgresql_where='(is_active = true)')
    op.alter_column('teams', 'external_team_id',
               existing_type=sa.VARCHAR(length=255),
               comment='External system team ID for ETL mapping',
               existing_nullable=True)
    op.alter_column('teams', 'team_alias',
               existing_type=sa.VARCHAR(length=255),
               comment='Optional display alias for team (e.g., "Series 22" instead of "Chicago - 22")',
               existing_nullable=True)
    op.alter_column('teams', 'team_name',
               existing_type=sa.VARCHAR(length=255),
               comment='Display name like "Tennaqua - Chicago 9"',
               existing_nullable=False)
    op.create_index('idx_series_stats_team_id', 'series_stats', ['team_id'], unique=False)
    op.alter_column('series_stats', 'team_id',
               existing_type=sa.INTEGER(),
               comment='Foreign key reference to teams table',
               existing_nullable=True)
    op.create_index('idx_schedule_home_team_id', 'schedule', ['home_team_id'], unique=False)
    op.create_index('idx_schedule_away_team_id', 'schedule', ['away_team_id'], unique=False)
    op.alter_column('schedule', 'away_team_id',
               existing_type=sa.INTEGER(),
               comment='Foreign key reference to teams table for away team',
               existing_nullable=True)
    op.alter_column('schedule', 'home_team_id',
               existing_type=sa.INTEGER(),
               comment='Foreign key reference to teams table for home team',
               existing_nullable=True)
    op.create_index('idx_polls_team_id', 'polls', ['team_id'], unique=False)
    op.alter_column('polls', 'team_id',
               existing_type=sa.INTEGER(),
               comment='Foreign key reference to teams table (INTEGER)',
               existing_nullable=True)
    op.create_index('idx_players_team_id', 'players', ['team_id'], unique=False)
    op.alter_column('players', 'team_id',
               existing_type=sa.INTEGER(),
               comment='Foreign key reference to teams table',
               existing_nullable=True)
    op.create_table_comment(
        'player_season_tracking',
        'Tracks season-long statistics for players including forced byes, unavailability, and injury counts',
        existing_comment=None,
        schema=None
    )
    op.drop_constraint('unique_player_season_tracking', 'player_season_tracking', type_='unique')
    op.create_unique_constraint('player_season_tracking_player_id_league_id_season_year_key', 'player_season_tracking', ['player_id', 'league_id', 'season_year'], postgresql_nulls_not_distinct=False)
    op.create_index('idx_player_season_tracking_player_id', 'player_season_tracking', ['player_id'], unique=False)
    op.create_index('idx_player_season_tracking_league_season', 'player_season_tracking', ['league_id', 'season_year'], unique=False)
    op.alter_column('player_season_tracking', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('player_season_tracking', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('player_season_tracking', 'injury',
               existing_type=sa.INTEGER(),
               comment='Number of injury-related absences this season',
               existing_nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('player_season_tracking', 'not_available',
               existing_type=sa.INTEGER(),
               comment='Number of times player was not available this season',
               existing_nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('player_season_tracking', 'forced_byes',
               existing_type=sa.INTEGER(),
               comment='Number of forced byes for this player this season',
               existing_nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('player_season_tracking', 'season_year',
               existing_type=sa.INTEGER(),
               comment='Tennis season year (Aug-July seasons)',
               existing_nullable=False)
    op.alter_column('player_season_tracking', 'player_id',
               existing_type=sa.VARCHAR(length=255),
               comment='References tenniscores_player_id from players table',
               existing_nullable=False)
    op.create_index('idx_unique_player_availability', 'player_availability', ['player_id', 'match_date', 'series_id'], unique=True)
    op.create_index('idx_player_availability_player_id', 'player_availability', ['player_id'], unique=False)
    op.create_index('idx_player_availability_notes', 'player_availability', [sa.literal_column("to_tsvector('english'::regconfig, notes)")], unique=False, postgresql_using='gin', postgresql_where="((notes IS NOT NULL) AND (notes <> ''::text))")
    op.create_index('idx_player_availability_date_series', 'player_availability', ['match_date', 'series_id'], unique=False)
    op.alter_column('player_availability', 'notes',
               existing_type=sa.TEXT(),
               comment='Optional note/comment from user about their availability',
               existing_nullable=True)
    op.alter_column('player_availability', 'player_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index('idx_match_scores_home_team_id', 'match_scores', ['home_team_id'], unique=False)
    op.create_index('idx_match_scores_away_team_id', 'match_scores', ['away_team_id'], unique=False)
    op.alter_column('match_scores', 'away_team_id',
               existing_type=sa.INTEGER(),
               comment='Foreign key reference to teams table for away team',
               existing_nullable=True)
    op.alter_column('match_scores', 'home_team_id',
               existing_type=sa.INTEGER(),
               comment='Foreign key reference to teams table for home team',
               existing_nullable=True)
    op.drop_table('activity_log')
    # ### end Alembic commands ###
